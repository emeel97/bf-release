#!/bin/bash

# OVS: append hugepage defaults only on Ubuntu 22.04
if command -v lsb_release >/dev/null 2>&1; then
	DIST_ID=$(lsb_release -is 2>/dev/null || echo "")
	DIST_RELEASE=$(lsb_release -rs 2>/dev/null || echo "")
	if [ "$DIST_ID" = "Ubuntu" ]; then
		case "$DIST_RELEASE" in
			22.04*)
				CONF_FILE="/etc/mellanox/mlnx-ovs.conf"
				if [ -f "$CONF_FILE" ]; then
					grep -q '^OVS_DOCA=' "$CONF_FILE" || echo 'OVS_DOCA="no"' >> "$CONF_FILE"
					grep -q '^OVS_DEFAULT_HUGEPAGE_SIZE=' "$CONF_FILE" || echo 'OVS_DEFAULT_HUGEPAGE_SIZE=2048' >> "$CONF_FILE"
					grep -q '^OVS_DEFAULT_HUGEPAGE_NUM='  "$CONF_FILE" || echo 'OVS_DEFAULT_HUGEPAGE_NUM=512'  >> "$CONF_FILE"
				fi
				;;
		esac
	fi
fi

if (grep -q OFED-internal /usr/bin/ofed_info > /dev/null 2>&1); then
    ofed_version=`ofed_info -n`
    ofed_minor=${ofed_version#*-}
    fw_minor=`dpkg-query --show -f '${Version}' mlnx-fw-updater 2> /dev/null 2>&1 | cut -d '-' -f 2`
    fw_sub_minor=`echo $fw_minor | cut -d '.' -f -3`
    if [ "$ofed_minor" == "$fw_sub_minor" ]; then
        ofed_version=${ofed_version}.`echo $fw_minor | cut -d '.' -f 4`
    fi
    sed -i -r -e "s/^(OFED)(.*)(-[0-9]*.*-[0-9]*.*):/MLNX_OFED_LINUX-${ofed_version} (\1\3):\n/" /usr/bin/ofed_info
    sed -i -r -e "s/(.*then echo) (.*):(.*)/\1 MLNX_OFED_LINUX-${ofed_version}: \3/" /usr/bin/ofed_info
    sed -i -r -e "s/(.*X-n\" ]; then echo) (.*)(; exit.*)/\1 ${ofed_version} \3/" /usr/bin/ofed_info
    sed -i -e "s/OFED-internal/MLNX_OFED_LINUX/g" /usr/bin/ofed_info
fi

# Use mlxconfig instead of mstconfig to support BF2
if [ -x /usr/bin/mlxconfig ]; then
    sed -i -e "s/mstconfig/mlxconfig/g" /sbin/mlnx_bf_configure /sbin/mlnx-sf
fi

# Show grub menu and set a timeout
if [ -e /etc/default/grub ]; then
	sed -i 's/.*GRUB_TIMEOUT_STYLE=.*/GRUB_TIMEOUT_STYLE=countdown/' /etc/default/grub
	if ! (grep -q GRUB_TIMEOUT_STYLE /etc/default/grub); then
		echo "GRUB_TIMEOUT_STYLE=countdown" >> /etc/default/grub
	fi
	perl -ni -e 'print unless /GRUB_RECORDFAIL_TIMEOUT/' /etc/default/grub
	sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=2\nGRUB_RECORDFAIL_TIMEOUT=2/' /etc/default/grub
	sed -i 's/GRUB_RECORDFAIL_TIMEOUT:-30/GRUB_RECORDFAIL_TIMEOUT:-2/' /etc/grub.d/00_header

	# Use console
	sed -i 's/^#GRUB_TERMINAL=.*/GRUB_TERMINAL=console/' /etc/default/grub

	# Linux: use console and set a sensible date on boot (the later is important
	# when resizing the partitions on first boot).
	sed -i \
	    -e 's/^GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX="console=hvc0 console=ttyAMA0 earlycon=pl011,0x01000000 fixrtc net.ifnames=0 biosdevname=0 iommu.passthrough=1"/' \
	    -e 's/^GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=""/' \
	    /etc/default/grub

	if [ -d /etc/default/grub.d ]; then
	    echo "GRUB_DISABLE_OS_PROBER=true" > /etc/default/grub.d/10-disableos-prober.cfg
	fi
fi

if [ -e /etc/default/networking ]; then
    sed -i -r -e "s/.*WAIT_ONLINE_TIMEOUT.*/WAIT_ONLINE_TIMEOUT=5/" /etc/default/networking
fi

if [ -e /etc/default/watchdog ]; then
	sed -i -r -e 's/watchdog_module=.*/watchdog_module="sbsa_gwdt"/' /etc/default/watchdog
fi

if [ -e /etc/cloud/cloud.cfg ]; then
	sed -i -r -e "s/(preserve_hostname:).*/\1 true/" /etc/cloud/cloud.cfg
fi

mkdir -p /etc/kubelet.d

# Verify/copy udev rules
if [ -e /usr/share/doc/mlnx-ofed-kernel-utils/examples/82-net-setup-link.rules ]; then
	mkdir -p /lib/udev/rules.d
	/bin/rm -f /lib/udev/rules.d/82-net-setup-link.rules
	/bin/rm -f /etc/udev/rules.d/82-net-setup-link.rules
	install -m 0644 /usr/share/doc/mlnx-ofed-kernel-utils/examples/82-net-setup-link.rules /lib/udev/rules.d/82-net-setup-link.rules
fi

if [ -e /usr/share/doc/mlnx-ofed-kernel-utils/examples/vf-net-link-name.sh ]; then
	mkdir -p /etc/infiniband
	/bin/rm -f /etc/infiniband/vf-net-link-name.sh
	install -m 0755 /usr/share/doc/mlnx-ofed-kernel-utils/examples/vf-net-link-name.sh /etc/infiniband/vf-net-link-name.sh
	# Add a workaround for the port names staring with c<n>
	sed -i  -e 's@^PORT_NAME=$1@PORT_NAME=`echo ${1} | sed -e "s/c[[:digit:]]\\+//"`@' /etc/infiniband/vf-net-link-name.sh
fi

if [ -d /etc/cloud/cloud.cfg.d ]; then
	cat > /etc/cloud/cloud.cfg.d/91-dib-cloud-init-datasources.cfg << EOF
datasource_list: [ ConfigDrive, NoCloud ]
EOF
fi

if [ -e /etc/NetworkManager/NetworkManager.conf ]; then
	# Enable NetworkManager for OOB and tmfifo interfaces.
	# Other network interfaces are skipped in /etc/NetworkManager/conf.d/40-mlnx.conf
	sed -i -r -e "s/(managed=).*/\1true/" /etc/NetworkManager/NetworkManager.conf
fi

# Disable kexec
if [ -e /etc/default/kexec ]; then
	sed -i -r -e "s/(LOAD_KEXEC=).*/\1false/;s/(USE_GRUB_CONFIG=).*/\1true/" /etc/default/kexec
fi

enable_service()
{
    service_name=$1

    if ! (systemctl list-unit-files 2>&1 | grep -w ^$service_name); then
        return
    fi
    systemctl unmask $service_name || true
    systemctl enable $service_name || true
}

disable_service()
{
    service_name=$1

    if ! (systemctl list-unit-files 2>&1 | grep -w ^$service_name); then
        return
    fi
    systemctl disable $service_name || true
}

# Enable tmpfs
enable_service /usr/share/systemd/tmp.mount

enable_service NetworkManager.service
enable_service NetworkManager-wait-online.service
enable_service acpid.service
enable_service openibd
enable_service networking
enable_service mlnx_snap
enable_service mst
# Enable ipmi services
enable_service mlx-openipmi.service
enable_service mlx_ipmid.service
enable_service set_emu_param.service
enable_service openvswitch-switch.service
enable_service watchdog.service
enable_service kdump.service

disable_service openvswitch-ipsec
disable_service srp_daemon.service
disable_service "srp_daemon_port@mlx5_0:1.service"
disable_service "srp_daemon_port@mlx5_1:1.service"
disable_service ibacm.service
disable_service opensmd.service
disable_service unattended-upgrades.service
disable_service apt-daily-upgrade.timer
disable_service strongswan-starter.service

#DEBHELPER#
